import httpClient from '@/utils/http-client';
import { BaseQueryImpl, PageQuery, PageResult } from '@/types';
import {
  {{ class_name }}Query,
  {{ class_name }}Create,
  {{ class_name }}Modify,
  {{ class_name }}Detail,
  {{ class_name }}Page,
  {{ class_name }}BatchModify,
} from '@/types/{{ kebab_case_class_name }}';

/**
 * 分页查询{{ class_name }}
 * 
 * @param pageQuery 分页参数
 * @param {{ lowercase_class_name }}Query 查询条件
 * @returns 含{{ class_name }}详情列表的分页结果
 */
export function fetch{{ class_name }}ByPage(pageQuery?: PageQuery, {{ lowercase_class_name }}Query?: Partial<{{ class_name }}Query>) {
  let pageQueryParams: PageQuery;
  if (pageQuery === null || pageQuery === undefined) {
    pageQueryParams = BaseQueryImpl.create(1, 200);
  } else {
    pageQueryParams = pageQuery
  }
   const params = {
    ...pageQueryParams,
    ...{{ lowercase_class_name }}Query
  };
  return httpClient.get<PageResult<{{ class_name }}Page>>('/{{ kebab_case_class_name }}/page', params);
}


/**
 * 获取{{ class_name }}详情
 * 
 * @param id {{ class_name }}的ID
 * @returns {{ class_name }}详细信息
 */
export function fetch{{ class_name }}Detail(id: number) {
  return httpClient.get<{{ class_name }}Detail>(`/{{ kebab_case_class_name }}/detail/${id}`);
}

/**
 * 导出{{ class_name }}数据导入模板
 * 
 */
export function export{{ class_name }}Template() {
  return httpClient.get<void>('/{{ kebab_case_class_name }}/export-template');
}

/**
 * 导出{{ class_name }}数据
 * 
 * @param ids 要导出的{{ class_name }}的ID列表
 */
export function export{{ class_name }}Page(ids: number[]) {
  return httpClient.get<void>('/{{ kebab_case_class_name }}/export', { params: { ids } });
}

/**
 * 创建{{ class_name }}
 * 
 * @param {{ lowercase_class_name }}Create 创建数据
 * @returns 创建的{{ class_name }}的ID
 */
export function create{{ class_name }}({{ lowercase_class_name }}Create: {{ class_name }}Create) {
  return httpClient.post<number>('/{{ kebab_case_class_name }}/create', {{ lowercase_class_name }}Create);
}

/**
 * 导入{{ class_name }}数据并进行校验
 * 
 * @param file 上传的Excel文件
 * @returns 校验结果列表
 */
export function import{{ class_name }}(file: File) {
  const formData = new FormData();
  formData.append('file', file);
  return httpClient.post<{{ class_name }}Create[]>('/{{ kebab_case_class_name }}/import', formData);
}

/**
 * 批量创建{{ class_name }}
 * 
 * @param {{ lowercase_class_name }}CreateList 创建数据列表
 * @returns 创建的{{ class_name }}的ID列表
 */
export function batchCreate{{ class_name }}({{ lowercase_class_name }}CreateList: {{ class_name }}Create[]) {
  return httpClient.post<number[]>('/{{ kebab_case_class_name }}/batch-create', {{ lowercase_class_name }}CreateList);
}

/**
 * 移除{{ class_name }}
 * 
 * @param id 要移除的{{ class_name }}的Id
 */
export function remove{{ class_name }}(id: number) {
  return httpClient.delete<void>(`/{{ kebab_case_class_name }}/remove/${id}`);
}

/**
 * 批量移除{{ class_name }}
 * 
 * @param ids 要移除的{{ class_name }}的ID数组
 */
export function batchRemove{{ class_name }}(ids: number[]) {
  return httpClient.delete<void>('/{{ kebab_case_class_name }}/batch-remove', { data: ids });
}

/**
 * 更新{{ class_name }}信息
 * 
 * @param {{ lowercase_class_name }}Modify 包含ID数组和修改的数据
 */
export function modify{{ class_name }}({{ lowercase_class_name }}Modify: {{ class_name }}Modify) {
  return httpClient.put<void>('/{{ kebab_case_class_name }}/modify', {{ lowercase_class_name }}Modify);
}

/**
 * 批量更新{{ class_name }}信息
 * 
 * @param {{ lowercase_class_name }}BatchModify 包含ID数组和修改的数据
 */
export function batchModify{{ class_name }}({{ lowercase_class_name }}BatchModify: {{ class_name }}BatchModify) {
  return httpClient.put<void>('/{{ kebab_case_class_name }}/batch-modify', {{ lowercase_class_name }}BatchModify);
}
package {{ package_name }}.entity;
{% for import in import_list %}
import {{ import }};
{%- endfor %}
import java.io.Serializable;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.singularity.common.model.CurrentUser;
import com.singularity.common.utils.SecurityUtil;

/**
 * <p>
 * {{ function_name }}对象 {{ table_name }}
 * </p>
 *
 * @author {{ author }}
 * @since {{ datetime }}
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@TableName("{{ table_name }}")
public class {{ class_name }}DO implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final LambdaQueryWrapper<{{ class_name }}DO> queryWrapper(){
        return new LambdaQueryWrapper<>();
    }
    
    public static {{ class_name }}DO fillInTenantIdUserId({{ class_name }}DO {{ lowercase_class_name }}DO){
        CurrentUser currentUser = SecurityUtil.getCurrentUser();
        {{ lowercase_class_name }}DO.setTenantId(currentUser.getCurrentTenantId());
        {{ lowercase_class_name }}DO.setUserId(currentUser.getUserId());
        return {{ lowercase_class_name }}DO;
    }
    {% for field in fields %}
    /**
     * {{ field.field.comment }}
     */
    {%- if field.gen_field.primary_key == 1  %}
    @TableId(value = "{{ primary_key }}", type = IdType.ASSIGN_ID)
    {%- endif %}
    private {{ field.gen_field.field_type }} {{ field.gen_field.field_name }};
    {% endfor %}
}
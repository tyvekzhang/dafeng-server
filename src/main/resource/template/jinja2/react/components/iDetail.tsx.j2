import { {{ class_name }}Detail } from '@/types/{{ kebab_case_class_name }}';
import { Button, Descriptions, Drawer, Space } from 'antd';
import React, { useMemo } from 'react';

interface {{ class_name }}DetailDrawerProps {
  is{{ class_name }}DetailDrawerVisible: boolean;
  on{{ class_name }}DetailClose: () => void;
  {{ lowercase_class_name }}Detail: {{ class_name }}Detail | null;
}

const {{ class_name }}DetailComponent: React.FC<{{ class_name }}DetailDrawerProps> = ({
                                                                     is{{ class_name }}DetailDrawerVisible,
                                                                     on{{ class_name }}DetailClose,
                                                                     {{ lowercase_class_name }}Detail,
                                                                   }) => {
  const footerButtons = useMemo(
    () => (
      <Space>
        <Button onClick={on{{ class_name }}DetailClose}>
          关闭
        </Button>
      </Space>
    ),
    [on{{ class_name }}DetailClose],
  );

  return (
    <Drawer
      title="{{ function_name }}详情"
      open={is{{ class_name }}DetailDrawerVisible}
      onClose={on{{ class_name }}DetailClose}
      extra={footerButtons}
      destroyOnClose
      width={600}
    >
      { {{ lowercase_class_name }}Detail && (
        <Descriptions column={1} bordered>
          {%- for field in fields %}
          {%- set comment = "" %}
          {%- if field.gen_field.detailable == 1 and field.gen_field.field_name != primary_key %}
          {%- if field.field.comment and field.field.comment != "" %}
              {%- set parentheseIndex_en = field.field.comment.find("(") %}
              {%- set parentheseIndex_cn = field.field.comment.find("（") %}
              {%- if parentheseIndex_en!= -1 %}
                  {%- set comment = field.field.comment[:parentheseIndex_en] %}
              {%- elif parentheseIndex_cn!= -1 %}
                  {%- set comment = field.field.comment[:parentheseIndex_cn] %}
              {%- else %}
                  {%- set comment = field.field.comment %}
              {%- endif %}
          {%- endif %}
          <Descriptions.Item label="{{ comment }}">{ {{ lowercase_class_name }}Detail.{{ field.gen_field.field_name }}}</Descriptions.Item>
          {%- endif %}
          {%- endfor %}
        </Descriptions>
      )}
    </Drawer>
  );
};

export default {{ class_name }}DetailComponent;


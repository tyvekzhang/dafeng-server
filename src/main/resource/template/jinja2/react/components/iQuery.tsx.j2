{%- set components = {
    'input': False,
    'select': False,
    'datepicker': False,
    'checkbox': False,
    'radio': False,
    'textarea': False,
    'autocomplete': False,
    'cascader': False,
    'colorpicker': False,
    'inputnumber': False,
    'mentions': False,
    'rate': False,
    'slider': False,
    'switch': False,
    'timepicker': False,
    'transfer': False,
    'treeselect': False,
    'upload': False
} %}

{%- for field in fields %}
  {%- if field.gen_field.queryable == 1 %}
    {%- set html_type = field.gen_field.html_type %}
    {%- if html_type in components %}
        {%- set _ = components.update({html_type: True}) %}
    {%- endif %}
  {%- endif %}
{%- endfor %}

{%- if components.input -%}
import { Input } from 'antd';
{%- endif %}
{%- if components.select %}
import { Select } from 'antd';
{%- endif %}
{%- if components.datepicker %}
import { DatePicker } from 'antd';
import dayjs from 'dayjs';
import type { Dayjs } from 'dayjs';
{%- endif %}
{%- if components.checkbox %}
import { Checkbox } from 'antd';
{%- endif %}
{%- if components.radio %}
import { Radio } from 'antd';
{%- endif %}
import {
  AutoComplete,
  Button,
  Cascader,
  ColorPicker,
  Form,
  InputNumber, Mentions,
  Modal, Rate,
  Slider, Switch, TimePicker, Transfer, TreeSelect, Upload, Space
} from 'antd';
import { FormInstance } from 'antd/es/form';
import React from 'react';

interface {{ class_name }}QueryProps {
  on{{ class_name }}QueryFinish: () => void;
  on{{ class_name }}QueryReset: () => void;
  {{ lowercase_class_name }}QueryForm: FormInstance;
}

const {{ lowercase_class_name }}QueryFormItemLayout = {
  labelCol: { span: 6 },
  wrapperCol: { span: 18 },
};

const {{ class_name }}QueryComponent: React.FC<{{ class_name }}QueryProps> = ({
  on{{ class_name }}QueryFinish,
  on{{ class_name }}QueryReset,
  {{ lowercase_class_name }}QueryForm,
}) => {
  const handle{{ class_name }}QueryReset = () => {
    on{{ class_name }}QueryReset();
    on{{ class_name }}QueryFinish();
  };

  return (
    <Form
      {...{{ lowercase_class_name }}QueryFormItemLayout}
      form={ {{ lowercase_class_name }}QueryForm}
      name="{{ lowercase_class_name }}Query"
      onFinish={on{{ class_name }}QueryFinish}
      layout="horizontal"
      className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-y-0 gap-x-4 pt-4 px-2 border-b"
    >
      {%- for field in fields %}
      {%- set dictType = field.dictType %}
      {%- set comment = "" %}
      {%- if field.gen_field.queryable == 1 and field.gen_field.field_name != primary_key %}
      {%- if field.field.comment and field.field.comment != "" %}
          {%- set parentheseIndex_en = field.field.comment.find("(") %}
          {%- set parentheseIndex_cn = field.field.comment.find("（") %}
          {%- if parentheseIndex_en!= -1 %}
              {%- set comment = field.field.comment[:parentheseIndex_en] %}
          {%- elif parentheseIndex_cn!= -1 %}
              {%- set comment = field.field.comment[:parentheseIndex_cn] %}
          {%- else %}
              {%- set comment = field.field.comment %}
          {%- endif %}
      {%- endif %}
      {%- set field_name = field.gen_field.field_name %}
      {%- set html_type = field.gen_field.html_type %}
      <Form.Item name="{{ field.gen_field.field_name }}" label="{{ comment }}" >
        {%- if html_type == 'input' %}
        <Input placeholder="请输入{{ comment }}" />
        {%- elif html_type =='select' or html_type == 'radio' %}
        {%- if dict_type %}
        <Select
            placeholder="请选择{{ comment }}"
            options={ {{ dict_type }} }
        />
        {%- else %}
        <Select placeholder="请选择{{ comment }}" />
        {%- endif %}
        {%- elif html_type == 'datepicker' or html_type == 'datetime' %}
        {%- if field.gen_field.query_type == "BETWEEN" %}
        <DatePicker.RangePicker
          format="YYYY-MM-DD"
          placeholder={["请选择开始时间", "请选择结束时间"]}
          presets={[
              { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },
              { label: '最近14天', value: [dayjs().add(-14, 'd'), dayjs()] },
              { label: '最近30天', value: [dayjs().add(-30, 'd'), dayjs()] },
              { label: '最近90天', value: [dayjs().add(-90, 'd'), dayjs()] },
          ]}
        />
        {%- else %}
        <DatePicker
          format="YYYY-MM-DD"
          placeholder="请选择{{ comment }}"
          presets={[
            { label: '昨天', value: dayjs().add(-1, 'd') },
            { label: '上周', value: dayjs().add(-7, 'd') },
            { label: '上月', value: dayjs().add(-1, 'month') },
          ]}
        />
        {%- endif %}
        {%- elif html_type == 'checkbox' %}
        <Checkbox >{{ comment }}</Checkbox>
        {%- elif html_type == 'textarea' %}
        <Input.TextArea />
        {%- elif html_type == 'autocomplete' %}
        <AutoComplete placeholder="请输入{{ comment }}" />
        {%- elif html_type == 'cascader' %}
        <Cascader placeholder="请选择{{ comment }}" />
        {%- elif html_type == 'colorpicker' %}
        <ColorPicker />
        {%- elif html_type == 'inputnumber' %}
        <InputNumber placeholder="请输入数字" />
        {%- elif html_type =='mentions' %}
        <Mentions placeholder="请提及{{ comment }}" />
        {%- elif html_type == 'rate' %}
        <Rate />
        {%- elif html_type =='slider' %}
        <Slider />
        {%- elif html_type =='switch' %}
        <Switch />
        {%- elif html_type == 'timepicker' %}
        <TimePicker placeholder="请选择时间" />
        {%- elif html_type == 'transfer' %}
        <Transfer />
        {%- elif html_type == 'treeselect' %}
        <TreeSelect placeholder="请选择" />
        {%- elif html_type == 'upload' %}
        <Upload />
        {%- else %}
        <Input placeholder="请输入{{ comment }}" />
        {%- endif %}
      </Form.Item>
      {%- endif %}
      {%- endfor %}
      <Form.Item className="flex justify-end">
        <Space className="inline-flex">
          <Button onClick={handle{{ class_name }}QueryReset}>重置</Button>
          <Button type="primary" htmlType="submit">
            查询
          </Button>
        </Space>
      </Form.Item>
    </Form>
  );
};

export default {{ class_name }}QueryComponent;

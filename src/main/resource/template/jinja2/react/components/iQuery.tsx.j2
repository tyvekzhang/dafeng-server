import { Button, DatePicker, Form, Input, Space, Select} from 'antd';
import { FormInstance } from 'antd/es/form';
import React from 'react';

interface {{ class_name }}QueryProps {
  on{{ class_name }}QueryFinish: () => void;
  on{{ class_name }}QueryReset: () => void;
  {{ lowercase_class_name }}QueryForm: FormInstance;
}

const {{ lowercase_class_name }}QueryFormItemLayout = {
  labelCol: { span: 6 },
  wrapperCol: { span: 18 },
};

const {{ class_name }}QueryComponent: React.FC<{{ class_name }}QueryProps> = ({
  on{{ class_name }}QueryFinish,
  on{{ class_name }}QueryReset,
  {{ lowercase_class_name }}QueryForm,
}) => {
  const handle{{ class_name }}QueryReset = () => {
    on{{ class_name }}QueryReset();
    on{{ class_name }}QueryFinish();
  };

  return (
    <Form
      {...{{ lowercase_class_name }}QueryFormItemLayout}
      form={ {{ lowercase_class_name }}QueryForm}
      name="{{ lowercase_class_name }}Query"
      onFinish={on{{ class_name }}QueryFinish}
      layout="horizontal"
      className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-y-0 gap-x-4 pt-4 px-2"
    >
      {%- for field in fields %}
      {%- if field.gen_field.queryable == 1 and field.gen_field.field_name != primary_key -%}
      {%- set parentheseIndex = field.field.comment.find("(") -%}
      {%- if parentheseIndex!= -1 -%}
          {% set comment = field.field.comment[:parentheseIndex] %}
      {%- else -%}
          {% set comment = field.field.comment %}
      {%- endif %}
      <Form.Item name="{{ field.gen_field.field_name }}" label="{{ comment }}" rules={[{ required: false, message: '请输入' }]}>
        {%- if field.gen_field.html_type == 'input' and field.gen_field.js_type == 'string' %}
        <Input placeholder="请输入" />
        {%- elif field.gen_field.html_type == 'datetime' %}
        <DatePicker.RangePicker />
        {%- elif field.gen_field.html_type == 'input' and field.gen_field.js_type == 'number' %}
        <Input type="number" placeholder="请输入" />
        {%- elif field.gen_field.field_name == 'status' %}
        <Select
          allowClear
          placeholder="请选择"
          optionFilterProp="label"
          defaultValue={"1"}
          onChange={() => {} }
          options={[
            {
              value: '1',
              label: '正常',
            },
            {
              value: '0',
              label: '停用',
            },
          ]}
        />
        {%- else %}
        <Input placeholder="请输入" />
        {% endif %}
      </Form.Item>
      {%- endif %}
      {%- endfor %}
      <Form.Item className="flex justify-end">
        <Space className="inline-flex">
          <Button onClick={handle{{ class_name }}QueryReset}>重置</Button>
          <Button type="primary" htmlType="submit">
            查询
          </Button>
        </Space>
      </Form.Item>
    </Form>
  );
};

export default {{ class_name }}QueryComponent;

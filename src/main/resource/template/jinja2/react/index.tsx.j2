 import React, { useEffect, useState } from 'react';
import { fetch{{class_name}}ByPage } from '@/service/{{kebab_case_class_name}}';
import { {{class_name}}Page } from '@/types/{{kebab_case_class_name}}';
import { PaginatedTable } from '@/components/base/paginated-table';
import { ColumnsType } from 'antd/lib/table';
import { BaseQueryImpl } from '@/types';
import ActionButtons from '@/components/base/action-button';

const {{class_name}}:React.FC = () => {
  const [{{ lowercase_class_name }}PageDataSource, set{{class_name}}PageDataSource] = useState<{{class_name}}Page[]>([]);
  const [{{ lowercase_class_name }}PageTotalCount, set{{class_name}}PageTotalCount] = useState(0);
  const [current, setCurrent] = useState(1);
  const [pageSize, setPageSize] = useState(10);
  useEffect(() => {
    const pageData = BaseQueryImpl.create(current, pageSize).buildPage()
    fetch{{class_name}}ByPage(pageData).then(resp => {
      set{{class_name}}PageDataSource(resp.records)
      set{{class_name}}PageTotalCount(resp.total)
    });
  }, [current, pageSize]);

  const handlePaginationChange = (newPage: number, newPageSize: number) => {
    setCurrent(newPage);
    setPageSize(newPageSize);
  };

 // 表格列信息
 const {{lowercase_class_name}}PageColumns: ColumnsType<{{class_name}}Page> = [
    {
      title: '序号',
      dataIndex: 'No',
      key: 'No',
      render: (_: number, _record: {{class_name}}Page, rowIndex: number) => rowIndex + 1,
      width: '8%',
    },
    {%- for field in fields %}
    {%- if field.gen_field.pageable == 1  %}
    {
      title: '{{ field.field.comment }}',
      dataIndex: '{{ field.gen_field.field_name }}',
      key: '{{ field.gen_field.field_name }}',
    },
    {%- endif%}
    {%- endfor %}
  ]

  return (
    <div className="container mx-auto px-4">
      <div>
        {/*<Search*/}
        {/*  form={queryForm}*/}
        {/*  handle{{class_name}}Query={handle{{class_name}}Query}*/}
        {/*  handleChangeState={handleChangeState}*/}
        {/*  handleQueryReset={handleQueryReset}*/}
        {/*  status={status}*/}
        {/*/>*/}
      </div>
      <div>
        <div>
          123
        </div>
        <div>
          <PaginatedTable<{{class_name}}Page>
            columns={ {{lowercase_class_name}}PageColumns}
            dataSource={ {{lowercase_class_name}}PageDataSource}
            total={ {{lowercase_class_name}}PageTotalCount}
            current={current}
            pageSize={pageSize}
            onPaginationChange={handlePaginationChange}
            rowKey="id"
          />
        </div>
      </div>
    </div>
  )
}

export default {{class_name}};

